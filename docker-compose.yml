version: '3.4'

services:
  # postgres:
  #   container_name: postgres
  #   image: "postgres:${POSTGRES_TAG}"
  #   restart: unless-stopped
  #   ports:
  #     - '5432:5432'
  #   volumes:
  #     - postgres:/var/lib/postgresql/data/pgdata
  #   networks:
  #     - django_boilerplate
  #   environment:
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #     - POSTGRES_DB=${DB_NAME}
  #     - POSTGRES_USER=${DB_USER}
  #     - PGDATA=/var/lib/postgresql/data/pgdata
  #     - PGUSER=${DB_USER}
  #   healthcheck:
  #           test: ["CMD-SHELL", "pg_isready"]
  #           timeout: 20s
  #           retries: 10
  django_boilerplate:
    container_name: django_boilerplate
    image: django_boilerplate
    restart: unless-stopped
    # depends_on:
    #   postgres:
    #       condition: service_healthy
    ports:
      - '8000:8000'
    volumes:
      - django_boilerplate:/app
    networks:
      - django_boilerplate
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ON_PRODUCTION=${ON_PRODUCTION}
      - DB_ENGINE=${DB_ENGINE}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_HOST=${DB_HOST}
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
    build:
      context: .
      dockerfile: ./Dockerfile
volumes:
  django_boilerplate:
  postgres:
networks:
  django_boilerplate: